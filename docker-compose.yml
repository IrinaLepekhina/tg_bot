version: '3.8' 

services:

  tg_bot:
    image: ghcr.io/irinalepekhina/tg_bot:dev
    build:
      context: .
      # dockerfile: ./Dockerfile.prod
    container_name: tg_bot
    ports:
      - "3001:3001"
    volumes:
      - .:/usr/src/app
    env_file:
      - ./env/development/database
      - ./env/development/tg_bot
    depends_on:
      tg_bot_redis:
        condition: service_started
      ngrok:
        condition: service_started
    networks:
      - tg_bot_front
      - chat_bot

  tg_bot_redis:
    image: redis/redis-stack:latest
    container_name: tg_bot_redis
    networks:
      - tg_bot_front

  tg_bot_db:
    image: postgres
    container_name: tg_bot_db
    env_file:
      - ./env/development/database
    volumes:
      - db_data_tg_bot:/var/lib/postgresql/data
    networks:
      - tg_bot_front

  tg_bot_db_migrator:
    image: ghcr.io/irinalepekhina/tg_bot:dev
    # image: infrastructure-tg_bot
    container_name:  tg_bot_db_migrator
    command: ["./wait-for", "--timeout=60", "tg_bot_db:5432", "--",
      "bin/rails", "db:prepare"]
    env_file:
      - ./env/development/database
      - ./env/development/tg_bot
    networks:
      - tg_bot_front
    deploy:
      restart_policy:
        condition: none

  tg_bot_webhook:
    image: ghcr.io/irinalepekhina/tg_bot:dev
    # image: infrastructure-tg_bot
    container_name:  tg_bot_webhook
    env_file:
      - ./env/development/database
      - ./env/development/tg_bot
    command: ["./wait-for", "--timeout=90", "tg_bot:3001", "--",
      "ruby", "bin/set_telegram_webhook.rb"]
    networks:
      - tg_bot_front
    deploy:
      restart_policy:
        condition: none
        
  tg_bot_signup:
    image: ghcr.io/irinalepekhina/tg_bot:dev
    # image: infrastructure-tg_bot
    container_name:  tg_bot_signup
    command: ["./wait-for", "--timeout=120", "tg_bot:3001", "--",
      "rails", "runner", "bin/initializing_bot_user.rb"]
    env_file:
      - ./env/development/database
      - ./env/development/tg_bot
    networks:
      - tg_bot_front
      - chat_bot
    deploy:
      restart_policy:
        condition: none

  ngrok:
    image: ngrok/ngrok
    container_name:  ngrok
    env_file:
      - ./env/development/tg_bot
    command: 
      - http
      - "tg_bot:3001"
      - "--domain=sweet-vital-coral.ngrok-free.app"
    ports:
      - "4040:4040"
    networks:
      - tg_bot_front

  tg_bot_redisinsight:
    image: redislabs/redisinsight:latest
    container_name:  tg_bot_redisinsight
    ports:
      - '8002:8001'
    volumes:
      - redisinsight_data_tg_bot:/db
    networks:
      - tg_bot_front

volumes:
  db_data_tg_bot:
  redisinsight_data_tg_bot:

networks:
  tg_bot_front:
    driver: bridge
    name:   tg_bot_front
  chat_bot:
    external: true